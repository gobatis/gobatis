<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "../../../dtd/mapper.dtd">

<mapper>
    <select id="SelectInsert" parameter="entity:struct" result="id">
        insert into test_entities(
        t_int8,
        t_bigint,
        t_int,
        t_decimal,
        t_numeric,
        t_real,
        t_double_precision,
        t_small_serial,
        t_serial,
        t_big_serial,
        t_money,
        t_char,
        t_text,
        t_timestamp_without_time_zone,
        t_timestamp_with_time_zone,
        t_date,
        t_time_without_time_zone,
        t_time_with_time_zone,
        t_interval,
        t_boolean
        ) values(
        #{ entity.Int8 },
        #{ entity.BigInt },
        #{ entity.Int },
        #{ entity.Decimal },
        #{ entity.Numeric },
        #{ entity.Real },
        #{ entity.DoublePrecision },
        #{ entity.SmallSerial },
        #{ entity.Serial },
        #{ entity.BigSerial },
        #{ entity.Money },
        #{ entity.Char },
        #{ entity.Text },
        #{ entity.TimestampWithoutTimeZone },
        #{ entity.TimestampWithTimeZone },
        #{ entity.Date },
        #{ entity.TimeWithoutTimeZone },
        #{ entity.TimeWithTimeZone },
        #{ entity.Interval },
        #{ entity.Boolean }
        ) returning id;
    </select>

    <select id="SelectInsertPointer" parameter="entity:struct" result="id">
        insert into test_entities(
        t_int8,
        t_bigint,
        t_int,
        t_decimal,
        t_numeric,
        t_real,
        t_double_precision,
        t_small_serial,
        t_serial,
        t_big_serial,
        t_money,
        t_char,
        t_text,
        t_timestamp_without_time_zone,
        t_timestamp_with_time_zone,
        t_date,
        t_time_without_time_zone,
        t_time_with_time_zone,
        t_interval,
        t_boolean
        ) values(
        #{ entity.Int8},
        #{ entity.BigInt },
        #{ entity.Int },
        #{ entity.Decimal },
        #{ entity.Numeric },
        #{ entity.Real },
        #{ entity.DoublePrecision },
        #{ entity.SmallSerial },
        #{ entity.Serial },
        #{ entity.BigSerial },
        #{ entity.Money },
        #{ entity.Char },
        #{ entity.Text },
        #{ entity.TimestampWithoutTimeZone },
        #{ entity.TimestampWithTimeZone },
        #{ entity.Date },
        #{ entity.TimeWithoutTimeZone },
        #{ entity.TimeWithTimeZone },
        #{ entity.Interval },
        #{ entity.Boolean }
        ) returning id;
    </select>

    <select id="SelectInsertForeachSlice" parameter="entity:struct, enums:array" result="id">
        insert into test_entities(
        t_int8,
        t_text
        )
        values(
        #{ entity.Int8 },
        <foreach collection="enums" separator="," open="'" close="'">
            ${index}:${item}
        </foreach>
        ) returning id;
    </select>

    <select id="SelectInsertForeachSlicePointer" parameter="entity:struct, enums:array" result="id">
        insert into test_entities(
        t_int8,
        t_text
        )
        values(
        #{ entity.Int8 },
        <foreach index="index1" item="item1" collection="enums" separator="," open="'" close="'">
            ${index1}-ok
            <foreach index="index2" item="item2" collection="item1" separator="," open="[" close="]">
                ${index1}a a &lt; b${index2}:${item2}
            </foreach>
        </foreach>
        ) returning id;
    </select>


    <select id="SelectInsertForeachMap" parameter="entity:struct, enums:map" result="id">
        insert into test_entities(t_char,t_text) values('SelectInsertForeachMap',
        '
        <foreach index="index" item="item" collection="enums">
            ${index}:
            <foreach index="index" item="item" collection="item">
                ${index} - &lt; - ${ item }
            </foreach>
        </foreach>
        ') returning id;
    </select>

    <select id="SelectInsertForeachMapPointer" parameter="entity:struct, enums:map" result="id">
        insert into test_entities(t_char,t_text) values(
        'SelectInsertForeachMapPointer',
        '
        <foreach index="index" item="item" collection="enums">
            ${index}:
            <foreach index="index" item="item" collection="item">
                ${index} - &lt; - ${ item }
            </foreach>
        </foreach>
        ')
        returning id;
    </select>

    <select id="SelectInsertForeachStruct" parameter="entity:struct" result="id">
        insert into test_entities(t_char,t_text) values(
        'SelectInsertForeachStruct',
        <foreach index="index" item="item" collection="entity" separator="," open="'" close="'">
            <choose>
                <when test="index == 'Char'">
                    ${index}-${item}
                </when>
                <otherwise>
                    ${index}
                </otherwise>
            </choose>
        </foreach>
        )
        returning id;
    </select>

    <select id="SelectInsertForeachStructPointer" parameter="entity:struct" result="id">
        insert into test_entities(t_char,t_text) values(
        'SelectInsertForeachStructPointer',
        <foreach index="index" item="item" collection="entity" separator="," open="'" close="'">
            <choose>
                <when test="index == 'Char'">
                    ${index}-${item}
                </when>
                <otherwise>
                    ${index}
                </otherwise>
            </choose>
        </foreach>
        )
        returning id;
    </select>

    <select id="SelectInsertContextTx" parameter="entity:struct" result="id">
        insert into test_entities(t_char,t_text) values('SelectInsertContextTx', #{entity.Char})
        returning id;
    </select>

    <insert id="Insert" parameter="name:string, tags:[]string">
        insert into test_entities(t_char,t_text) values(#{name},
        <foreach collection="tags" open="'" close="'" separator=",">
            ${item}
        </foreach>
        )
    </insert>

    <select id="SelectRow" parameter="id:int" result="t_char:string, t_text:string">
        select t_char,t_text from test_entities where id = #{id};
    </select>


    <select id="SelectRowPointer" parameter="id:int" result="t_char:string, t_text:string">
        select t_char,t_text from test_entities where id = #{id};
    </select>

    <select id="SelectRows" parameter="start:int, end:int" result="t_char:[]string, t_text:[]struct">
        select t_char,t_text from test_entities where id > #{start} and id &lt;= #{end};
    </select>

    <select id="SelectRowsPointer" parameter="start:int, end:int" result="t_char:[]string, t_text:[]string">
        select t_char,t_text from test_entities where id > #{start} and id &lt;= #{end};
    </select>

    <select id="SelectStruct" parameter="id:int" resultType="struct">
        select * from test_entities where id = #{id};
    </select>

    <select id="SelectStructPointer" parameter="id:int" resultType="struct">
        select * from test_entities where id = #{id};
    </select>

    <select id="SelectStructs" parameter="id:int" resultType="[]struct">
        select * from test_entities where id > #{id} and id &lt; 50;
    </select>

    <select id="SelectStructsPointer" parameter="id:int" resultType="[]struct">
        select * from test_entities where id > #{id} and id &lt; 50;
    </select>

</mapper>